version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgis/postgis:15-3.3
    container_name: f1-postgres
    environment:
      POSTGRES_USER: f1_user
      POSTGRES_PASSWORD: f1_password_secure_2024
      POSTGRES_DB: f1_dashboard
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements,pg_trgm
      -c pg_stat_statements.track=all
      -c pg_stat_statements.max=10000
      -c log_statement=all
      -c log_min_duration_statement=100
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c work_mem=16MB
      -c maintenance_work_mem=128MB
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U f1_user -d f1_dashboard"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: f1-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Redis Insight (optional - for Redis management UI)
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: f1-redis-insight
    ports:
      - "8001:8001"
    volumes:
      - redis_insight_data:/db
    restart: unless-stopped
    depends_on:
      - redis
    profiles:
      - tools

  # Grafana (optional - for monitoring)
  grafana:
    image: grafana/grafana:latest
    container_name: f1-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  redis_insight_data:
    driver: local
  grafana_data:
    driver: local

networks:
  default:
    name: f1-network